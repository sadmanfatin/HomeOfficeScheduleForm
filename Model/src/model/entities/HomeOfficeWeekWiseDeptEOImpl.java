package model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jul 02 23:24:11 BDT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HomeOfficeWeekWiseDeptEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Department {
            public Object get(HomeOfficeWeekWiseDeptEOImpl obj) {
                return obj.getDepartment();
            }

            public void put(HomeOfficeWeekWiseDeptEOImpl obj, Object value) {
                obj.setDepartment((String)value);
            }
        }
        ,
        WeekId {
            public Object get(HomeOfficeWeekWiseDeptEOImpl obj) {
                return obj.getWeekId();
            }

            public void put(HomeOfficeWeekWiseDeptEOImpl obj, Object value) {
                obj.setWeekId((Number)value);
            }
        }
        ,
        SubmittedToHead {
            public Object get(HomeOfficeWeekWiseDeptEOImpl obj) {
                return obj.getSubmittedToHead();
            }

            public void put(HomeOfficeWeekWiseDeptEOImpl obj, Object value) {
                obj.setSubmittedToHead((String)value);
            }
        }
        ,
        SubmittedToHr {
            public Object get(HomeOfficeWeekWiseDeptEOImpl obj) {
                return obj.getSubmittedToHr();
            }

            public void put(HomeOfficeWeekWiseDeptEOImpl obj, Object value) {
                obj.setSubmittedToHr((String)value);
            }
        }
        ,
        FirstSubmissionToHr {
            public Object get(HomeOfficeWeekWiseDeptEOImpl obj) {
                return obj.getFirstSubmissionToHr();
            }

            public void put(HomeOfficeWeekWiseDeptEOImpl obj, Object value) {
                obj.setFirstSubmissionToHr((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(HomeOfficeWeekWiseDeptEOImpl object);

        public abstract void put(HomeOfficeWeekWiseDeptEOImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DEPARTMENT = AttributesEnum.Department.index();
    public static final int WEEKID = AttributesEnum.WeekId.index();
    public static final int SUBMITTEDTOHEAD = AttributesEnum.SubmittedToHead.index();
    public static final int SUBMITTEDTOHR = AttributesEnum.SubmittedToHr.index();
    public static final int FIRSTSUBMISSIONTOHR = AttributesEnum.FirstSubmissionToHr.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HomeOfficeWeekWiseDeptEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("model.entities.HomeOfficeWeekWiseDeptEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for Department, using the alias name Department.
     * @return the Department
     */
    public String getDepartment() {
        return (String)getAttributeInternal(DEPARTMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Department.
     * @param value value to set the Department
     */
    public void setDepartment(String value) {
        setAttributeInternal(DEPARTMENT, value);
    }

    /**
     * Gets the attribute value for WeekId, using the alias name WeekId.
     * @return the WeekId
     */
    public Number getWeekId() {
        return (Number)getAttributeInternal(WEEKID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WeekId.
     * @param value value to set the WeekId
     */
    public void setWeekId(Number value) {
        setAttributeInternal(WEEKID, value);
    }

    /**
     * Gets the attribute value for SubmittedToHead, using the alias name SubmittedToHead.
     * @return the SubmittedToHead
     */
    public String getSubmittedToHead() {
        return (String)getAttributeInternal(SUBMITTEDTOHEAD);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubmittedToHead.
     * @param value value to set the SubmittedToHead
     */
    public void setSubmittedToHead(String value) {
        setAttributeInternal(SUBMITTEDTOHEAD, value);
    }

    /**
     * Gets the attribute value for SubmittedToHr, using the alias name SubmittedToHr.
     * @return the SubmittedToHr
     */
    public String getSubmittedToHr() {
        return (String)getAttributeInternal(SUBMITTEDTOHR);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubmittedToHr.
     * @param value value to set the SubmittedToHr
     */
    public void setSubmittedToHr(String value) {
        setAttributeInternal(SUBMITTEDTOHR, value);
    }

    /**
     * Gets the attribute value for FirstSubmissionToHr, using the alias name FirstSubmissionToHr.
     * @return the FirstSubmissionToHr
     */
    public String getFirstSubmissionToHr() {
        return (String)getAttributeInternal(FIRSTSUBMISSIONTOHR);
    }

    /**
     * Sets <code>value</code> as the attribute value for FirstSubmissionToHr.
     * @param value value to set the FirstSubmissionToHr
     */
    public void setFirstSubmissionToHr(String value) {
        setAttributeInternal(FIRSTSUBMISSIONTOHR, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param department key constituent
     * @param weekId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String department, Number weekId) {
        return new Key(new Object[]{department, weekId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
