package model.entities;

import java.sql.SQLException;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jul 02 08:24:43 BDT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EmpHomeOfficeDayScEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SeqNo {
            public Object get(EmpHomeOfficeDayScEOImpl obj) {
                return obj.getSeqNo();
            }

            public void put(EmpHomeOfficeDayScEOImpl obj, Object value) {
                obj.setSeqNo((Number)value);
            }
        }
        ,
        Tdate {
            public Object get(EmpHomeOfficeDayScEOImpl obj) {
                return obj.getTdate();
            }

            public void put(EmpHomeOfficeDayScEOImpl obj, Object value) {
                obj.setTdate((Date)value);
            }
        }
        ,
        EmployeeNumber {
            public Object get(EmpHomeOfficeDayScEOImpl obj) {
                return obj.getEmployeeNumber();
            }

            public void put(EmpHomeOfficeDayScEOImpl obj, Object value) {
                obj.setEmployeeNumber((Number)value);
            }
        }
        ,
        HomeOfficeStatus {
            public Object get(EmpHomeOfficeDayScEOImpl obj) {
                return obj.getHomeOfficeStatus();
            }

            public void put(EmpHomeOfficeDayScEOImpl obj, Object value) {
                obj.setHomeOfficeStatus((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(EmpHomeOfficeDayScEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(EmpHomeOfficeDayScEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(EmpHomeOfficeDayScEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(EmpHomeOfficeDayScEOImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(EmpHomeOfficeDayScEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(EmpHomeOfficeDayScEOImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(EmpHomeOfficeDayScEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(EmpHomeOfficeDayScEOImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        HeadApproved {
            public Object get(EmpHomeOfficeDayScEOImpl obj) {
                return obj.getHeadApproved();
            }

            public void put(EmpHomeOfficeDayScEOImpl obj, Object value) {
                obj.setHeadApproved((String)value);
            }
        }
        ,
        WeekId {
            public Object get(EmpHomeOfficeDayScEOImpl obj) {
                return obj.getWeekId();
            }

            public void put(EmpHomeOfficeDayScEOImpl obj, Object value) {
                obj.setWeekId((Number)value);
            }
        }
        ,
        EmpHomeOfficeWeekScEO {
            public Object get(EmpHomeOfficeDayScEOImpl obj) {
                return obj.getEmpHomeOfficeWeekScEO();
            }

            public void put(EmpHomeOfficeDayScEOImpl obj, Object value) {
                obj.setEmpHomeOfficeWeekScEO((EmpHomeOfficeWeekScEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(EmpHomeOfficeDayScEOImpl object);

        public abstract void put(EmpHomeOfficeDayScEOImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SEQNO = AttributesEnum.SeqNo.index();
    public static final int TDATE = AttributesEnum.Tdate.index();
    public static final int EMPLOYEENUMBER = AttributesEnum.EmployeeNumber.index();
    public static final int HOMEOFFICESTATUS = AttributesEnum.HomeOfficeStatus.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int HEADAPPROVED = AttributesEnum.HeadApproved.index();
    public static final int WEEKID = AttributesEnum.WeekId.index();
    public static final int EMPHOMEOFFICEWEEKSCEO = AttributesEnum.EmpHomeOfficeWeekScEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public EmpHomeOfficeDayScEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("model.entities.EmpHomeOfficeDayScEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for SeqNo, using the alias name SeqNo.
     * @return the SeqNo
     */
    public Number getSeqNo() {
        return (Number)getAttributeInternal(SEQNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SeqNo.
     * @param value value to set the SeqNo
     */
    public void setSeqNo(Number value) {
        setAttributeInternal(SEQNO, value);
    }

    /**
     * Gets the attribute value for Tdate, using the alias name Tdate.
     * @return the Tdate
     */
    public Date getTdate() {
        return (Date)getAttributeInternal(TDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Tdate.
     * @param value value to set the Tdate
     */
    public void setTdate(Date value) {
        setAttributeInternal(TDATE, value);
    }

    /**
     * Gets the attribute value for EmployeeNumber, using the alias name EmployeeNumber.
     * @return the EmployeeNumber
     */
    public Number getEmployeeNumber() {
        return (Number)getAttributeInternal(EMPLOYEENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmployeeNumber.
     * @param value value to set the EmployeeNumber
     */
    public void setEmployeeNumber(Number value) {
        setAttributeInternal(EMPLOYEENUMBER, value);
    }

    /**
     * Gets the attribute value for HomeOfficeStatus, using the alias name HomeOfficeStatus.
     * @return the HomeOfficeStatus
     */
    public String getHomeOfficeStatus() {
        return (String)getAttributeInternal(HOMEOFFICESTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for HomeOfficeStatus.
     * @param value value to set the HomeOfficeStatus
     */
    public void setHomeOfficeStatus(String value) {
        setAttributeInternal(HOMEOFFICESTATUS, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for HeadApproved, using the alias name HeadApproved.
     * @return the HeadApproved
     */
    public String getHeadApproved() {
        return (String)getAttributeInternal(HEADAPPROVED);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeadApproved.
     * @param value value to set the HeadApproved
     */
    public void setHeadApproved(String value) {
        setAttributeInternal(HEADAPPROVED, value);
    }

    /**
     * Gets the attribute value for WeekId, using the alias name WeekId.
     * @return the WeekId
     */
    public Number getWeekId() {
        return (Number)getAttributeInternal(WEEKID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WeekId.
     * @param value value to set the WeekId
     */
    public void setWeekId(Number value) {
        setAttributeInternal(WEEKID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity EmpHomeOfficeWeekScEOImpl.
     */
    public EmpHomeOfficeWeekScEOImpl getEmpHomeOfficeWeekScEO() {
        return (EmpHomeOfficeWeekScEOImpl)getAttributeInternal(EMPHOMEOFFICEWEEKSCEO);
    }

    /**
     * Sets <code>value</code> as the associated entity EmpHomeOfficeWeekScEOImpl.
     */
    public void setEmpHomeOfficeWeekScEO(EmpHomeOfficeWeekScEOImpl value) {
        setAttributeInternal(EMPHOMEOFFICEWEEKSCEO, value);
    }


    /**
     * @param tdate key constituent
     * @param employeeNumber key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Date tdate, Number employeeNumber) {
        return new Key(new Object[]{tdate, employeeNumber});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        
        Map sessionScope = ADFContext.getCurrent().getSessionScope();
        String user = (String)sessionScope.get("userId");
        
     
         
        if (DML_UPDATE == operation) {
            try {
                setLastUpdateDate((Date)Date.getCurrentDate());
                setLastUpdatedBy(new oracle.jbo.domain.Number(user));
                this.setHeadApproved("n");  
                
            } catch (SQLException f) {
                System.out.println(f.getMessage());
            }
        } else if (DML_INSERT == operation) {

            try {

                setCreationDate((Date)Date.getCurrentDate());
                setCreatedBy(new oracle.jbo.domain.Number(user));



            } catch (SQLException f) {
                ;
            }
        }

        super.doDML(operation, e);
    }
}
