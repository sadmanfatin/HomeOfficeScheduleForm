package model.views;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jun 23 02:48:34 BDT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DepartmentVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Departments {
            public Object get(DepartmentVORowImpl obj) {
                return obj.getDepartments();
            }

            public void put(DepartmentVORowImpl obj, Object value) {
                obj.setDepartments((String)value);
            }
        }
        ,
        EmpHomeOfficeWeekScVO {
            public Object get(DepartmentVORowImpl obj) {
                return obj.getEmpHomeOfficeWeekScVO();
            }

            public void put(DepartmentVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        HomeOfficeWeekWiseDeptVO {
            public Object get(DepartmentVORowImpl obj) {
                return obj.getHomeOfficeWeekWiseDeptVO();
            }

            public void put(DepartmentVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        EmployeeVO1 {
            public Object get(DepartmentVORowImpl obj) {
                return obj.getEmployeeVO1();
            }

            public void put(DepartmentVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        EmpHomeOfficeWeekScVO1 {
            public Object get(DepartmentVORowImpl obj) {
                return obj.getEmpHomeOfficeWeekScVO1();
            }

            public void put(DepartmentVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(DepartmentVORowImpl object);

        public abstract void put(DepartmentVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int EMPHOMEOFFICEWEEKSCVO = AttributesEnum.EmpHomeOfficeWeekScVO.index();


    public static final int DEPARTMENTS = AttributesEnum.Departments.index();
    public static final int HOMEOFFICEWEEKWISEDEPTVO = AttributesEnum.HomeOfficeWeekWiseDeptVO.index();
    public static final int EMPLOYEEVO1 = AttributesEnum.EmployeeVO1.index();
    public static final int EMPHOMEOFFICEWEEKSCVO1 = AttributesEnum.EmpHomeOfficeWeekScVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DepartmentVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Departments.
     * @return the Departments
     */
    public String getDepartments() {
        return (String) getAttributeInternal(DEPARTMENTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Departments.
     * @param value value to set the  Departments
     */
    public void setDepartments(String value) {
        setAttributeInternal(DEPARTMENTS, value);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link EmpHomeOfficeWeekScVO.
     */
    public RowIterator getEmpHomeOfficeWeekScVO() {
        return (RowIterator)getAttributeInternal(EMPHOMEOFFICEWEEKSCVO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link HomeOfficeWeekWiseDeptVO.
     */
    public RowIterator getHomeOfficeWeekWiseDeptVO() {
        return (RowIterator)getAttributeInternal(HOMEOFFICEWEEKWISEDEPTVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> EmployeeVO1.
     */
    public RowSet getEmployeeVO1() {
        return (RowSet)getAttributeInternal(EMPLOYEEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> EmpHomeOfficeWeekScVO1.
     */
    public RowSet getEmpHomeOfficeWeekScVO1() {
        return (RowSet)getAttributeInternal(EMPHOMEOFFICEWEEKSCVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
   
       
        

    
    
}
